#!/bin/bash
#
# This script takes a Rackspace Cloud account and creates puppet infrastucture
# (the chicken) and then creates hosted Strings infrastructure (the egg).  The
# setup can then be used to create more chickens (puppet infrastructure) which
# can be used to create customer-specific eggs (customer environments).
#

# Source in shared functions and variables
source shared.bash

# Sleeping
echo "*** We will run a process that might cause some damage... 5 seconds to CTRL-C!"
sleep 5

for instance in queue api ldap; do
  echo ">>> Launching instance: $instance"
  novaExecute boot "$(getServerName).$data_center.$top_level_domain" --flavor 2 --image "$base_image" > "$output_directory/$instance.txt"
done

for instance in dashboard database; do
  echo ">>> Launching instance: $instance"
  novaExecute boot "$(getServerName).$data_center.$top_level_domain" --flavor 3 --image "$base_image" > "$output_directory/$instance.txt"
done

for instance in puppetmaster; do
  echo ">>> Launching instance: $instance"
  novaExecute boot "$(getServerName).$data_center.$top_level_domain" --flavor 4 --image "$base_image" > "$output_directory/$instance.txt"
done

echo ">>> Waiting on services..."
waitOnServices

echo ">>> Verifying DNS configuration..."
dnsExecute domain-show "$top_level_domain" > /dev/null
if [ "$?" -gt 0 ]; then
  echo ">>> Creating top level domain..."
  dnsExecute domain-create "$top_level_domain" --email-address "$dns_email_address" > /dev/null
fi

echo ">>> Creating DNS entries..."
for server in "$output_directory"/*.txt; do
  id=$(novaValueByKey id "$server")
  name=$(novaValueByKey name "$server")
  ip_address=$(novaExecute show "$id" | novaValueByKey accessIPv4)
  echo ">>> Creating $name ($ip_address)..."
  dnsExecute record-create --name "$name" --type A --data "$ip_address" "$top_level_domain" > /dev/null
done

# Exit
echo ">>> Infrastructure is done, see $output_directory for details"
finishRunning
exit 0
